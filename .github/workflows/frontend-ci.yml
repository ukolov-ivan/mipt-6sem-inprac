name: Frontend CI Pipeline

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/frontend-image.tar
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and export
      uses: docker/build-push-action@v6
      with:
        tags: ${{ github.repository_owner }}/frontend:latest
        outputs: type=docker,dest=/tmp/frontend-image.tar
        file: frontend/Dockerfile
    
    - name: Upload as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-image
        path: /tmp/frontend-image.tar

  lint-format:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download as an artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend-image
        path: /tmp
        
    - name: Load image
      run: |
        docker load --input /tmp/frontend-image.tar

    - name: Lint and format
      run: |
        docker run --rm --volume ${{ github.workspace }}:/app --workdir /app/frontend ${{ github.repository_owner }}/frontend:latest npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint-format
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download as an artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend-image
        path: /tmp

    - name: Load image
      run: |
        docker load --input /tmp/frontend-image.tar

    - name: Run frontend tests
      run: |
        docker run --rm --volume ${{ github.workspace }}:/app --workdir /app/frontend ${{ github.repository_owner }}/frontend:latest echo test
      #  docker run --rm --volume ${{ github.workspace }}:/app --workdir /app/frontend ${{ github.repository_owner }}/frontend:latest npm test
